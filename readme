📚 Documentación Consolidada de la API de Fitness
Esta documentación cubre los endpoints para los módulos de Usuarios, Ejercicios y Planes de Entrenamiento.

🧑‍💻 Users API (/users)
Método	Ruta	Descripción
GET	/users	Listar todos con filtros (role, search).
GET	/users/:id	Obtener usuario por ID.
POST	/users	Crear un nuevo usuario (Requiere name, email).
PUT	/users/:id	Actualización total (Requiere name, email).
DELETE	/users/:id	Eliminar usuario por ID.

Exportar a Hojas de cálculo
GET /users (Lista)
Query Params: role (string), search (string).
📥 Ejemplo: GET /users?role=user
📤 Response 200 OK: [ { "id": "...", "name": "...", "role": "user" } ]

GET /users/:id (Individual)
📥 Ejemplo: GET /users/1
📤 Response 200 OK: { "id": 1, "name": "..." }
❌ Fallos: 404 Not Found (Usuario no encontrado).

POST /users (Crear)
📥 Body (JSON): { "name": "Carlos", "email": "carlos@example.com" }
📤 Response 201 Created: Retorna el objeto creado con su ID.
❌ Fallos: 400 Bad Request (Faltan name o email).

PUT /users/:id & PATCH /users/:id (Actualizar)
Método	Requisitos	Response 200 OK	Fallos
PUT	Requiere todos los campos.	Objeto actualizado.	400 Bad Request (Faltan campos), 404 Not Found.
PATCH	Envía solo campos a modificar.	Objeto actualizado.	404 Not Found.

Exportar a Hojas de cálculo
DELETE /users/:id (Eliminar)
📤 Response 204 No Content: Eliminación exitosa.
❌ Fallos: 404 Not Found (Usuario no encontrado).

💪 Exercises API (/exercises)
Método	Ruta	Descripción
GET	/exercises	Listar con filtros (muscleGroup, category, limit, etc.).
GET	/exercises/:id	Obtener ejercicio por ID.
POST	/exercises	Crear ejercicio (Requiere name, muscleGroup, category).
PUT/PATCH	/exercises/:id	Actualización total/parcial.
DELETE	/exercises/:id	Eliminar ejercicio.

Exportar a Hojas de cálculo
GET /exercises (Lista)
Query Params: muscleGroup, category, difficulty, limit.
📥 Ejemplo: GET /exercises?muscleGroup=Pecho&limit=2
📤 Response 200 OK: [ { "id": 2, "name": "Press Banca", ... } ]
⚠️ Nota: Devuelve {"message": "No hay ejercicios disponibles"} si no hay coincidencias.

GET /exercises/:id (Individual)
📥 Ejemplo: GET /exercises/1
📤 Response 200 OK: Retorna el objeto del ejercicio.
❌ Fallos: 400 Bad Request (ID no numérico), 404 Not Found.

POST /exercises (Crear)
📥 Body (JSON): { "name": "Remo con Mancuerna", "muscleGroup": "Espalda", "category": "Hipertrofia" }
📤 Response 201 Created: Retorna el nuevo objeto.
❌ Fallos: 400 Bad Request (Faltan name, muscleGroup, o category).

🗓️ Workout Plans API (/workout-plans)
Método	Ruta	Descripción
GET	/workout-plans	Listar con filtros (userId, limit).
GET	/workout-plans/:id	Obtener plan por ID.
POST	/workout-plans	Crear plan (Requiere userId, name).
PUT/PATCH	/workout-plans/:id	Actualización total/parcial.
DELETE	/workout-plans/:id	Eliminar plan.

Exportar a Hojas de cálculo
GET /workout-plans (Lista)
Query Params: userId (number), limit (number).
📥 Ejemplo: GET /workout-plans?userId=2
📤 Response 200 OK: Retorna la lista filtrada.

POST /workout-plans (Crear)
📥 Body (JSON): { "userId": 7, "name": "Rutina de Descanso Activo" }
📤 Response 201 Created: Retorna el nuevo plan.
❌ Fallos: 400 Bad Request (Faltan userId o name).

PUT /workout-plans/:id (Actualización Total)
Requisitos: Requiere userId y name en el cuerpo.
❌ Fallos: 400 Bad Request (Faltan campos), 404 Not Found.

DELETE /workout-plans/:id (Eliminar)
📤 Response 204 No Content: Eliminación exitosa.
❌ Fallos: 404 Not Found.