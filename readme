Documentaci√≥n de la API de Usuarios
===============================================================

Users API
---------------------------------------------------------------
GET /users
---------------------------------------------------------------
‚úÖ Listar todos los usuarios con filtros opcionales

üî∏ Query Params:
- role (string): filtrar por rol (ej: "user")
- search (string): buscar por nombre (parcial o completo)

üì• Ejemplo:
GET /users?role=user&search=samuel

üì§ Response 200 OK:
[
  {
    "id": "b42f53fa-7b30-4b91-8d36-dc1c6ef27611",
    "name": "Samuel Morneo",
    "email": "samuelmorneau@example.com",
    "role": "user",
    "createdAt": "2025-09-12T12:00:00Z"
  }
]

---------------------------------------------------------------
GET /users/:id
---------------------------------------------------------------
‚úÖ Obtener un usuario por ID

üì• Ejemplo:
GET /users/b42f53fa-7b30-4b91-8d36-dc1c6ef27611

üì§ Response 200 OK:
{
  "id": "...",
  "name": "...",
  "email": "...",
  "role": "...",
  "createdAt": "..."
}

üì§ Response 404 Not Found:
{ "error": "Usuario no encontrado" }

---------------------------------------------------------------
POST /users
---------------------------------------------------------------
‚úÖ Crear un nuevo usuario

üì• Body (JSON):
{
  "name": "Carlos",
  "email": "carlos@example.com",
  "role": "admin"
}

üì§ Response 201 Created:
{
  "id": "1696092345678",
  "name": "Carlos",
  "email": "carlos@example.com",
  "role": "admin",
  "createdAt": "2025-09-30T10:15:00.123Z"
}

üì§ Response 400 Bad Request:
{ "error": "Name y email son requeridos" }

---------------------------------------------------------------
PUT /users/:id
---------------------------------------------------------------
‚úÖ Actualizar un usuario por ID

üì• Body (JSON):
{
  "name": "Carlos Actualizado",
  "email": "nuevoemail@example.com",
  "role": "user"
}

üì§ Response 200 OK:
{
  "id": "...",
  "name": "Carlos Actualizado",
  "email": "nuevoemail@example.com",
  "role": "user",
  "createdAt": "..."
}

üì§ Response 400 Bad Request:
{ "error": "Name y email son requeridos" }

üì§ Response 404 Not Found:
{ "error": "Usuario no encontrado" }

---------------------------------------------------------------
DELETE /users/:id
---------------------------------------------------------------
‚úÖ Eliminar un usuario por ID

üì§ Response 200 OK:
{ "deleted": "ID_DEL_USUARIO" }

üì§ Response 404 Not Found:
{ "error": "Usuario no encontrado" }

---------------------------------------------------------------
üìù Notas:
- Esta API utiliza almacenamiento en memoria (no persistente).
- Al reiniciar el servidor, los datos se restablecen.
- El ID se genera con Date.now() como valor temporal. Se puede usar `uuid` para una mejor pr√°ctica.
------------------------------------------------------------------------------------

Exercises/API
La ruta base para todos los endpoints es /exercises.

M√©todo	Ruta	Descripci√≥n
GET	/exercises	Obtiene la lista de ejercicios, con soporte para filtros y l√≠mite.
GET	/exercises/:id	Obtiene un ejercicio espec√≠fico por ID.
POST	/exercises	Crea un nuevo ejercicio.
PUT	/exercises/:id	Actualizaci√≥n total de un ejercicio existente.
PATCH	/exercises/:id	Actualizaci√≥n parcial de un ejercicio existente.
DELETE	/exercises/:id	Elimina un ejercicio espec√≠fico.

Exportar a Hojas de c√°lculo
üîé GET /exercises (Obtener Lista)
Permite recuperar la colecci√≥n completa de ejercicios. Se pueden aplicar filtros a trav√©s de Query Strings.

Par√°metros de Consulta (Query Strings)
Par√°metro	Tipo	Descripci√≥n	Ejemplo
muscleGroup	string	Filtra ejercicios por grupo muscular.	?muscleGroup=Piernas
category	string	Filtra ejercicios por categor√≠a.	?category=Calistenia
difficulty	string	Filtra ejercicios por nivel de dificultad.	?difficulty=Intermedio
limit	number	Limita el n√∫mero de resultados devueltos.	?limit=5

Exportar a Hojas de c√°lculo
Ejemplo de Request
GET /exercises?muscleGroup=Pecho&limit=2

Ejemplos de Response
C√≥digo de Estado	Descripci√≥n	Cuerpo de Respuesta (Body)
200 OK	√âxito. Retorna la lista filtrada.	[ { "id": 2, "name": "Press Banca", ... }, { "id": 4, "name": "Flexiones", ... } ]
200 OK	No se encontraron resultados.	{"message": "No hay ejercicios disponibles"}

Exportar a Hojas de c√°lculo
üß† GET /exercises/:id (Obtener Individual)
Obtiene un √∫nico ejercicio usando su identificador.

Ejemplo de Request
GET /exercises/1

Ejemplos de Response
C√≥digo de Estado	Descripci√≥n	Cuerpo de Respuesta (Body)
200 OK	√âxito. Retorna el ejercicio.	{"id": 1, "name": "Sentadilla con Barra", "muscleGroup": "Piernas", ...}
400 Bad Request	ID no es un n√∫mero.	{"error": "El ID debe ser num√©rico"}
404 Not Found	Ejercicio no encontrado.	{"error": "Ejercicio no encontrado"}

Exportar a Hojas de c√°lculo
‚ú® POST /exercises (Crear)
Crea un nuevo ejercicio. Requiere name, muscleGroup, y category.

Ejemplo de Request
JSON

POST /exercises
Content-Type: application/json

{
    "name": "Remo con Mancuerna",
    "muscleGroup": "Espalda",
    "category": "Hipertrofia",
    "difficulty": "Intermedio"
}
Ejemplos de Response
C√≥digo de Estado	Descripci√≥n	Cuerpo de Respuesta (Body)
201 Created	√âxito. Recurso creado.	{"id": 11, "name": "Remo con Mancuerna", ...}
400 Bad Request	Faltan campos requeridos.	{"error": "Nombre, grupo muscular y categor√≠a son requeridos"}

Exportar a Hojas de c√°lculo
üîÑ PUT /exercises/:id (Actualizaci√≥n Total)
Reemplaza completamente un ejercicio existente. Requiere todos los campos (name, muscleGroup, category).

Ejemplo de Request
JSON

PUT /exercises/6
Content-Type: application/json

{
    "name": "Martillo de B√≠ceps",
    "muscleGroup": "Brazos",
    "category": "Hipertrofia",
    "difficulty": "Principiante"
}
Ejemplos de Response
C√≥digo de Estado	Descripci√≥n
200 OK	√âxito. Retorna el objeto actualizado.
400 Bad Request	Faltan campos requeridos.
404 Not Found	Ejercicio no encontrado.

Exportar a Hojas de c√°lculo
ü©π PATCH /exercises/:id (Actualizaci√≥n Parcial)
Actualiza uno o varios campos de un ejercicio existente. No requiere todos los campos.

Ejemplo de Request
JSON

PATCH /exercises/6
Content-Type: application/json

{
    "difficulty": "Avanzado"
}
Ejemplos de Response
C√≥digo de Estado	Descripci√≥n
200 OK	√âxito. Retorna el objeto actualizado.
404 Not Found	Ejercicio no encontrado.

Exportar a Hojas de c√°lculo
üóëÔ∏è DELETE /exercises/:id (Eliminaci√≥n)
Elimina un ejercicio por su ID.

Ejemplo de Request
DELETE /exercises/10

Ejemplos de Response
C√≥digo de Estado	Descripci√≥n
204 No Content	√âxito. Eliminaci√≥n completada. (No devuelve cuerpo).
404 Not Found	Ejercicio no encontrado.

